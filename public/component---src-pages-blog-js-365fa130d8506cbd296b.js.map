{"version":3,"file":"component---src-pages-blog-js-365fa130d8506cbd296b.js","mappings":"wSAsCA,EAhCwB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAEfC,EAA6CD,EAA7CC,KAAMC,EAAuCF,EAAvCE,UAAWC,EAA4BH,EAA5BG,gBAAiBC,EAAWJ,EAAXI,OAE1C,OAEI,cAAIC,UAAU,4BACV,eAAKA,UAAU,6BACX,QAAC,EAAAC,KAAD,CAAMC,GAAE,GAAKN,EAAQI,UAAU,mDAA/B,MAAmF,QAAC,IAAD,CAAOA,UAAU,0DAA0DG,MAAOJ,EAAOI,WAKhL,eAAKH,UAAU,oBACX,QAAC,EAAAC,KAAD,CAAMD,UAAU,2CAA0CE,GAAE,GAAKN,IAC7D,cACIQ,IAAG,EAEJC,IAAE,GAEHR,IAEF,4BAAWS,EAAAA,EAAAA,GAAWR,MAG1B,QAAC,EAAAG,KAAD,CAAMD,UAAU,oJAAoJE,GAAE,GAAKN,GAA3K,sBCKhB,EAlCqB,WAuBjB,OArBaW,EAAAA,EAAAA,gBAAe,cAqBhBC,mBAAmBC,MAAMC,KAAI,SAAAf,GAAQ,MAAK,CAClDgB,OAAQhB,EAASgB,OACjBC,GAAIjB,EAASiB,GACbC,YAAalB,EAASkB,YACtBd,OAAQJ,EAASmB,aACjBlB,KAAMD,EAASC,KACfC,UAAWF,EAASoB,YAAYC,KAAK,GAAGC,QACxCnB,gBAAiBH,EAASoB,YAAYC,KAAK,GAAGE,WAAWD,a,UCtBjE,IAAME,GAAgB,4MA+FtB,EAlFsB,WAElB,IAqBA,GArBkBZ,EAAAA,EAAAA,gBAAe,cAqB4Ba,iBAAiBX,MAAM,GAA5EE,EAAR,EAAQA,OAAQU,EAAhB,EAAgBA,UAAWtB,EAA3B,EAA2BA,OAAQgB,EAAnC,EAAmCA,YAE7BO,EAAYC,IAGlB,OACI,yBACI,QAAC,IAAD,CACIC,MAAOT,EAAYC,KAAK,GAAGC,QAC3BQ,YAAaV,EAAYC,KAAK,GAAGE,WAAWD,QAC5CS,MAAOX,EAAYC,KAAK,IAAIE,WAAWD,WAE3C,eAAKjB,UAAU,oCACX,oBAEI,oBACI,cAAIA,UAAU,uDAEZW,IACF,mBAASX,UAAU,+BAA8BM,EAAAA,EAAAA,GAAWe,MAEhE,oBACI,QAAC,IAAD,CAAOrB,UAAU,wBAAwBG,MAAOJ,EAAOI,WAQ/D,eAAKH,UAAU,SAEX,cAAIA,UAAU,6BAAd,uBAIA,QAACmB,EAAD,KACKG,EAAUZ,KAAI,SAAAf,GAAQ,OACnB,QAAC,EAAD,CACIgC,IAAKhC,EAASiB,GACdjB,SAAUA,Y,UCtE1C,EATkB,kBAChB,QAAC,IAAD,MAEE,QAAC,EAAD,OACA,QAAC,IAAD","sources":["webpack://gatsby-starter-default/./src/components/articuloPreview.js","webpack://gatsby-starter-default/./src/hooks/use-articulos.js","webpack://gatsby-starter-default/./src/components/contenidoBlog.js","webpack://gatsby-starter-default/./src/pages/blog.js"],"sourcesContent":["import React from 'react';\r\nimport ParserHTML from '../components/particles/ParseHTML';\r\nimport Image from 'gatsby-image';\r\nimport { css } from '@emotion/react';\r\nimport { Link } from 'gatsby';\r\n\r\nconst ArticuloPreview = ({ articulo }) => {\r\n\r\n    const { slug, metatitle, metadescription, imagen } = articulo;\r\n\r\n    return (\r\n\r\n        <li className=\"w-full w-full list-none\">\r\n            <div className=\"overflow-hidden relative\">\r\n                <Link to={`${slug}`} className=\"before:bg-black before:absolute before:inset-0 \">  <Image className=\"w-full h-69 hover:transition-opacity hover:duration-300\" fluid={imagen.fluid}\r\n                />\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"bg-slate-50 p-8\">\r\n                <Link className=\"text-black\tfont-normal hover:opacity-40\" to={`${slug}`}>\r\n                    <h3\r\n                        css={css`\r\n                        font-size:3rem;\r\n                    `} sd\r\n\r\n                    >{metatitle}</h3>\r\n\r\n                    <article> {ParserHTML(metadescription)}</article>\r\n\r\n                </Link>\r\n                <Link className=\"py-6 px-5 block text-center bg-teal-600 m-10 transition-colors cursor-pointer uppercase rounded-lg hover:bg-teal-400 font-bold rounded text-white\" to={`${slug}`}>Ver Tratamiento</Link>\r\n            </div>\r\n        </li>\r\n    );\r\n\r\n}\r\n\r\nexport default ArticuloPreview;","import { graphql, useStaticQuery } from 'gatsby';\r\n\r\nconst useArticulos = () => {\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n        allDatoCmsArticulo {\r\n            nodes {\r\n                titulo\r\n                id\r\n                slug\r\n                  descripcion\r\n                  seoMetaTags {\r\n                    tags\r\n                  }\r\n                imgdestacada {\r\n                    fluid (maxWidth: 350){\r\n                        ...GatsbyDatoCmsFluid\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    `);\r\n\r\n    return data.allDatoCmsArticulo.nodes.map(articulo => ({\r\n        titulo: articulo.titulo,\r\n        id: articulo.id,\r\n        descripcion: articulo.descripcion,\r\n        imagen: articulo.imgdestacada,\r\n        slug: articulo.slug,\r\n        metatitle: articulo.seoMetaTags.tags[0].content,\r\n        metadescription: articulo.seoMetaTags.tags[3].attributes.content,\r\n    }))\r\n}\r\n \r\nexport default useArticulos;","import React from 'react';\r\nimport ParserHTML from '../components/particles/ParseHTML';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport Image from 'gatsby-image';\r\nimport styled from '@emotion/styled';\r\nimport ArticuloPreview from '../components/articuloPreview';\r\nimport useArticulos from \"../hooks/use-articulos\";\r\nimport Meta from './meta';\r\n\r\n\r\nconst ListadoArticulos = styled.ul`\r\n  max-width:1200px;\r\n  width:95%;\r\n  margin:4rem auto 0 auto;\r\n\r\n  @media (min-width:768px){\r\n    display:grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    column-gap: 3rem\r\n  }\r\n`\r\n\r\n\r\nconst ContenidoBlog = () => {\r\n\r\n    const resultado = useStaticQuery(graphql`\r\n    query{\r\n          allDatoCmsPagina(filter: { slug: { eq: \"blog\" } }) {\r\n                nodes {\r\n                    titulo\r\n                     contenido\r\n                     seoMetaTags {\r\n                        tags\r\n                      }\r\n                        imagen{\r\n                              fluid {\r\n                                ...GatsbyDatoCmsFluid      \r\n                                }\r\n                            }\r\n               \r\n                  }\r\n            }\r\n        }\r\n     `);\r\n\r\n\r\n    const { titulo, contenido, imagen, seoMetaTags } = resultado.allDatoCmsPagina.nodes[0];\r\n\r\n    const articulos = useArticulos();\r\n\r\n    // console.log(articulos);\r\n    return (\r\n        <>\r\n            <Meta\r\n                title={seoMetaTags.tags[0].content}\r\n                description={seoMetaTags.tags[3].attributes.content}\r\n                image={seoMetaTags.tags[13].attributes.content}\r\n            />\r\n            <div className=\"py-8 min-h-screen w-3/4 mx-auto\">\r\n                <div>\r\n\r\n                    <div>\r\n                        <h1 className=\"text-center font-black text-6xl mt-10 text-teal-900\"\r\n\r\n                        >{titulo}</h1>\r\n                        <article className=\"text-center text-4xl my-4 \">{ParserHTML(contenido)}</article>\r\n                    </div>\r\n                    <div>\r\n                        <Image className=\"w-10/12 my-6 mx-auto \" fluid={imagen.fluid} />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"py-8\">\r\n\r\n                    <h2 className=\"text-center py-4 text-5xl\">\r\n                        Nuestros Articulos\r\n                    </h2>\r\n\r\n                    <ListadoArticulos >\r\n                        {articulos.map(articulo => (\r\n                            <ArticuloPreview\r\n                                key={articulo.id}\r\n                                articulo={articulo}\r\n\r\n\r\n                            />\r\n                        ))}\r\n                    </ListadoArticulos>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ContenidoBlog;","import * as React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport ContenidoBlog from \"../components/contenidoBlog\";\r\n\r\nimport SignUpForm from \"../components/signUpForm\";\r\n\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n\r\n    <ContenidoBlog/>\r\n    <SignUpForm/>\r\n   \r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n"],"names":["articulo","slug","metatitle","metadescription","imagen","className","Link","to","fluid","css","sd","ParserHTML","useStaticQuery","allDatoCmsArticulo","nodes","map","titulo","id","descripcion","imgdestacada","seoMetaTags","tags","content","attributes","ListadoArticulos","allDatoCmsPagina","contenido","articulos","useArticulos","title","description","image","key"],"sourceRoot":""}